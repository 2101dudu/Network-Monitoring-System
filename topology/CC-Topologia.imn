node n1 {
    type router
    model router
    network-config {
	hostname r1
	!
	interface eth2
	 ip address 10.0.4.1/24
	!
	interface eth1
	 ip address 10.0.3.2/24
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {451.0 171.0}
    labelcoords {451.0 203.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n5}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	
	}
    }
    services {OSPFv2 OSPFv3 zebra IPForward UserDefined}
}

node n2 {
    type router
    model router
    network-config {
	hostname r2
	!
	interface eth2
	 ip address 10.0.5.1/24
	!
	interface eth1
	 ip address 10.0.1.1/24
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {607.0 301.0}
    labelcoords {607.0 333.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    interface-peer {eth2 n6}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    services {OSPFv2 OSPFv3 zebra IPForward UserDefined}
}

node n3 {
    type router
    model router
    network-config {
	hostname r3
	!
	interface eth2
	 ip address 10.0.6.1/24
	!
	interface eth1
	 ip address 10.0.2.1/24
	!
	interface eth0
	 ip address 10.0.1.2/24
	!
    }
    canvas c1
    iconcoords {469.0 459.0}
    labelcoords {469.0 491.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n4}
    interface-peer {eth2 n7}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	
	}
    }
    services {OSPFv2 OSPFv3 zebra IPForward UserDefined}
}

node n4 {
    type router
    model router
    network-config {
	hostname r4
	!
	interface eth2
	 ip address 10.0.7.1/24
	!
	interface eth1
	 ip address 10.0.3.1/24
	!
	interface eth0
	 ip address 10.0.2.2/24
	!
    }
    canvas c1
    iconcoords {309.0 331.0}
    labelcoords {309.0 363.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n1}
    interface-peer {eth2 n8}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    services {OSPFv2 OSPFv3 zebra IPForward UserDefined}
}

node n5 {
    type router
    model host
    network-config {
	hostname pc1
	!
	interface eth0
	 ip address 10.0.4.10/24
	!
    }
    canvas c1
    iconcoords {451.0 29.0}
    labelcoords {451.0 61.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n6 {
    type router
    model host
    network-config {
	hostname s0
	!
	interface eth0
	 ip address 10.0.5.10/24
	!
    }
    canvas c1
    iconcoords {885.0 304.0}
    labelcoords {885.0 336.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	service named start
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n7 {
    type router
    model host
    network-config {
	hostname pc3
	!
	interface eth0
	 ip address 10.0.6.10/24
	!
    }
    canvas c1
    iconcoords {472.0 616.0}
    labelcoords {472.0 648.0}
    interface-peer {eth0 n3}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	
	}
    }
    services {DefaultRoute SSH UserDefined}
}

node n8 {
    type router
    model host
    network-config {
	hostname pc2
	!
	interface eth0
	 ip address 10.0.7.10/24
	!
    }
    canvas c1
    iconcoords {45.0 330.0}
    labelcoords {45.0 362.0}
    interface-peer {eth0 n4}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('preenche_resolvconf.sh', )
	cmdup=('mkdir -p /run/systemd/resolve', 'touch /run/systemd/resolve/stub-resolv.conf', 'sh preenche_resolvconf.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:preenche_resolvconf.sh
	custom-command preenche_resolvconf.sh
	config {
	echo "# -- gerado pela script de arranque..." >> /etc/resolv.conf
	echo "domain cc" >> /etc/resolv.conf
	echo "nameserver 10.0.5.10" >> /etc/resolv.conf
	echo "" >> /etc/resolv.conf
	}
    }
    services {DefaultRoute SSH UserDefined}
}

link l1 {
    nodes {n1 n2}
    bandwidth 10000000
}

link l2 {
    ber 1
    delay 5000
    nodes {n2 n3}
    bandwidth 5000000
}

link l3 {
    ber 5
    delay 10000
    nodes {n3 n4}
    bandwidth 2000000
}

link l4 {
    duplicate 10
    ber 10
    delay 20000
    nodes {n4 n1}
    bandwidth 1000000
}

link l5 {
    nodes {n5 n1}
    bandwidth 10000000
}

link l6 {
    nodes {n6 n2}
    bandwidth 10000000
}

link l7 {
    nodes {n7 n3}
    bandwidth 10000000
}

link l8 {
    nodes {n8 n4}
    bandwidth 10000000
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses no
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

